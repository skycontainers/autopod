---
- name: write the config files for api server
  template: src=apiserver.j2 dest=/etc/kubernetes/apiserver
  notify:
          - restart apiserver
          - restart controller-manager
          - restart scheduler

- name: write the config file for controller-manager
  copy: src=controller-manager dest=/etc/kubernetes/controller-manager
  notify:
          - restart controller-manager

- name: write the config file for scheduler
  copy: src=scheduler dest=/etc/kubernetes/scheduler
  notify:
          - restart scheduler

- name: Enable apiserver
  service: name=kube-apiserver enabled=yes state=started

- name: Enable controller-manager
  service: name=kube-controller-manager enabled=yes state=started

- name: Enable scheduler
  service: name=kube-scheduler enabled=yes state=started

- name: Copy minion definition to masters
  template: src=node.j2 dest=/tmp/node-{{ item }}.yml
  changed_when: false
  with_items:
          groups['minions']

- name: Load minion definition into masters
  command: /usr/bin/kubectl create -f /tmp/node-{{ item }}.yml
  register: command_result
  failed_when: "'already exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "command_result.rc == 0"
  with_items:
          groups['minions']

- name: Delete minion definitions from masters
  file: path=/tmp/node-{{ item }}.yml state=absent
  changed_when: false
  with_items:
          groups['minions']

- include: firewalld.yml
  when: has_firewalld.rc == 0

- include: iptables.yml
  when: has_firewalld.rc != 0 and has_iptables.rc == 0
